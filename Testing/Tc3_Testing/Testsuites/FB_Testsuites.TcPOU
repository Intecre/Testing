<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Testsuites" Id="{f57812b9-99c8-4f64-b54a-807a33ca5cc6}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'reflection'} 
FUNCTION_BLOCK PUBLIC FB_Testsuites EXTENDS FB_Base IMPLEMENTS I_Testsuites
VAR_INPUT
	fbList:				FB_ListTestsuite;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	stTestsuites:    	ST_Testsuites;
	bSave: 				BOOL;
	sFilePathName:		STRING(255):= 'C:\report.xml';

	fbXml:				FB_XmlDomParser;
	testsuites:			PVOID;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();


fbXml.SaveDocumentToFile(sFilePathName, bSave);]]></ST>
    </Implementation>
    <Method Name="M_Started" Id="{9f9f5ca1-441c-0f29-0c6d-16c04b2958a4}">
      <Declaration><![CDATA[METHOD PROTECTED M_Started : BOOL
VAR_INPUT
END_VAR

VAR
	nIndex: DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Started:= TRUE;
WHILE nIndex < fbList.P_Length DO
	M_Started:= M_Started AND (fbList.M_Get(nIndex).P_State = E_Base.Stopped);
	nIndex:= nIndex + 1;
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Starting" Id="{a8b1fe70-9112-024f-0be9-355ea21512f0}">
      <Declaration><![CDATA[METHOD PROTECTED M_Starting : BOOL
VAR_INPUT
END_VAR

VAR
	nIndex: DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE nState OF
	0:
		IF 	SUPER^.M_Starting() THEN
			fbXml.NewDocument();
			stTestsuites.sName:= M_GetName(sInstancePath);
			stTestsuites.nTests:= 0;
			stTestsuites.nFailures:= 0;
			stTestsuites.nErrors:= 0;
			stTestsuites.nSkipped:= 0;
			stTestsuites.nAssertions:= 0;
			stTestsuites.fTime:= 0.0;
			nState:= 1;
		END_IF
		
	1:
		testsuites:= fbXml.AppendNode(fbXml.GetDocumentNode(), 'testsuites');
		fbXml.AppendAttribute(testsuites, 'name', sName);					// name        Name of the entire test run  
		fbXml.AppendAttributeAsInt(testsuites, 'tests', nTests);			// tests       Total number of tests in this file    
		fbXml.AppendAttributeAsInt(testsuites, 'failures', nFailures);		// failures    Total number of failed tests in this file 
		fbXml.AppendAttributeAsInt(testsuites, 'errors', nErrors);			// errors      Total number of errored tests in this file     
		fbXml.AppendAttributeAsInt(testsuites, 'skipped', nSkipped);		// skipped     Total number of skipped tests in this file    
		fbXml.AppendAttributeAsInt(testsuites, 'assertions', nAssertions);	// assertions  Total number of assertions for all tests in this file    
		fbXml.AppendAttributeAsDouble(testsuites, 'time', fTime);			// time        Aggregated time of all tests in this file in seconds     
		fbXml.AppendAttribute(testsuites, 'timestamp', sTimestamp);			// timestamp   Date and time of when the test run was executed (in ISO 8601
		nState:= 2;
	
	2:
		WHILE nIndex < fbList.P_Length DO
			fbList.M_Get(nIndex).M_Request(E_Base.Starting);
			nIndex:= nIndex + 1;
		END_WHILE
		nState:= 3;
		
	3:
		M_Starting:= TRUE;
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stopping" Id="{188bbc9a-c2f6-0b60-00aa-0b55afe47559}">
      <Declaration><![CDATA[METHOD PROTECTED M_Stopping : BOOL
VAR_INPUT
END_VAR

VAR
	nIndex: DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE nState OF
	0:
		WHILE nIndex < fbList.P_Length DO
			nTests:= nTests + fbList.M_Get(nIndex).P_Tests;
			nFailures:= nFailures + fbList.M_Get(nIndex).P_Failures;
			nErrors:= nErrors + fbList.M_Get(nIndex).P_Errors;
			nSkipped:= nSkipped + fbList.M_Get(nIndex).P_Skipped;
			nAssertions:= nAssertions + fbList.M_Get(nIndex).P_Assertions;
			fTime:= fTime +  fbList.M_Get(nIndex).P_Time;
			fbXml.AppendCopy(testsuites, fbList.M_Get(nIndex).P_Node);
			nIndex:= nIndex + 1;
		END_WHILE
		nState:= 1;
		
	1:
		fbXml.SetAttribute(fbXml.Attribute(testsuites, 'name'), sName);					
		fbXml.SetAttributeAsInt(fbXml.Attribute(testsuites, 'tests'), nTests);			
		fbXml.SetAttributeAsInt(fbXml.Attribute(testsuites, 'failures'), nFailures);		
		fbXml.SetAttributeAsInt(fbXml.Attribute(testsuites, 'errors'), nErrors);			
		fbXml.SetAttributeAsInt(fbXml.Attribute(testsuites, 'skipped'), nSkipped);		
		fbXml.SetAttributeAsInt(fbXml.Attribute(testsuites, 'assertions'), nAssertions);	
		fbXml.SetAttributeAsDouble(fbXml.Attribute(testsuites, 'time'), fTime);			
		fbXml.SetAttribute(fbXml.Attribute(testsuites, 'timestamp'), sTimestamp);
		nState:= 2;
	
	2:
		bSave:= TRUE;
		nState:= 3;
		
	3:
		IF NOT bSave THEN
			nState:= 4;
		END_IF

	4:
		M_Stopping:= TRUE;
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Testsuites">
      <LineId Id="9" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuites.M_Started">
      <LineId Id="12" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuites.M_Starting">
      <LineId Id="34" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="83" Count="3" />
      <LineId Id="41" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="46" Count="7" />
      <LineId Id="44" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="59" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="69" Count="0" />
      <LineId Id="38" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuites.M_Stopping">
      <LineId Id="6" Count="1" />
      <LineId Id="42" Count="0" />
      <LineId Id="49" Count="5" />
      <LineId Id="73" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="56" Count="1" />
      <LineId Id="59" Count="6" />
      <LineId Id="58" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="11" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="36" Count="2" />
      <LineId Id="25" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>